@mixin max_w($wid, $margin) {
  max-width: $wid;
  margin: $margin;
}
@mixin grid($rep, $gap: 0) {
  display: grid;
  grid-template-columns: repeat($rep, 1fr);
  gap: $gap;
}
@mixin flex($gap: 0) {
  display: flex;
  gap: $gap;
}
@mixin flex_a_cen($gap: 0) {
  display: flex;
  align-items: center;
  gap: $gap;
}
@mixin flex_bet($gap: 0) {
  display: flex;
  justify-content: space-between;
  gap: $gap;
}
@mixin flex_cen($gap: 0) {
  display: flex;
  justify-content: center;
  gap: $gap;
}
@mixin flex_bet_cen($gap: 0) {
  display: flex;
  justify-content: space-between;
  align-items: center;
  gap: $gap;
}
@mixin flex_cen_cen($gap: 0) {
  display: flex;
  justify-content: center;
  align-items: center;
  gap: $gap;
}
@mixin arrow($color, $rotate) {
  content: "";
  border-right: 1px solid $color;
  border-bottom: 1px solid $color;
  rotate: $rotate;
  width: 0.5em;
  height: 0.5em;
  margin-top: -0.2em;
}
@mixin right {
  @include flex_bet();
  align-items: flex-start;
  &::before {
    content: "";
    width: 280px;
    display: block;
  }
  .right {
    width: calc(100% - (280px + 90px));
  }
}
@mixin icon($icon: null) {
  @if $icon {
    content: $icon; // 変数が渡された場合
  } @else {
    content: ""; // 変数が空の場合
  }
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  font-family: icomoon !important;
  font-style: normal;
  font-variant: normal;
  font-weight: 400;
  line-height: 1;
  text-transform: none;
}

@mixin size($property, $base-size) {
  // vw単位での計算結果を文字列として定義し、pxは含まない
  $calculated-vw: #{round(($base-size / 19.2) * 100) / 100}vw;

  // プロパティに適用、min関数の式を文字列として渡す
  #{$property}: min(#{$calculated-vw}, #{$base-size}px);

  //使用例
  //@include size(margin-bottom, 500);
  //出力
  //margin-bottom: min(25.64vw, 500px);
}

@mixin size02($property, $sizes...) {
  // 各サイズに対してmin関数を適用し、リストとして結合
  $result: (); // 空のリストとして初期化
  @each $size in $sizes {
    // サイズが0の場合はそのまま0にする
    @if $size == 0 {
      $result: append($result, 0);
    } @else {
      $calculated-vw: #{round(($size / 19.2) * 100) / 100}vw;
      $result: append($result, min(#{$calculated-vw}, #{$size}px));
    }
  }

  // プロパティに出力
  #{$property}: $result;

  //使用例
  // @include size02(margin, 500, 1000);
  //出力
  //margin: min(25.64vw, 500px) min(51.28vw, 1000px);
}

@mixin size_cl($property, $min-size, $max-size) {
  // 中間のvw単位の計算（四捨五入して小数点2桁まで）
  $calculated-vw: #{round(($max-size / 19.2) * 100) / 100}vw;

  // プロパティにclamp関数を使って適用
  #{$property}: clamp(#{$min-size}px, #{$calculated-vw}, #{$max-size}px);

  //使用例
  // @include size_cl(width, 500, 1000);
  //出力
  //width: clamp(500px, 25.64vw, 1000px);
}

@mixin size_cl02($property, $sizes...) {
  // 結果を格納する空リストを初期化
  $result: ();

  @each $size in $sizes {
    // 最小値と最大値を取得
    $min-size: nth($size, 1);
    $max-size: nth($size, 2);
    // 中間のvw計算（vw=1.54は基準に応じて調整）
    $calculated-vw: #{round(($max-size / 19.2) * 100) / 100}vw;

    // clamp関数で値を構成し、リストに追加
    $result: append(
      $result,
      clamp(#{$min-size}px, #{$calculated-vw}, #{$max-size}px),
      space
    );
  }

  // プロパティに出力
  #{$property}: $result;
  //使用例
  // @include size_cl02(margin, (15, 30), (20, 40), (20, 50));
  //出力
  //margin: clamp(15px, 0.77vw, 30px) clamp(20px, 1.03vw, 40px) clamp(20px, 1.03vw, 50px);
}
@mixin width($width) {
  width: min(100%, $width);
}
@mixin width_center($width) {
  width: min(100%, $width);
  margin: 0 auto;
  padding: 0 15px;
}
$f_yu: "Zen Kaku Gothic New", sans-serif;
$f_noto: "Noto Sans JP", sans-serif;

$gra: #cdd6dd;
$black: #555;
$ore: #f15a22;

//clampサイズ
$c_160: clamp(110px, 12.5vw, 160px);
$c_100: clamp(70px, 7.7vw, 100px);
$c_90: clamp(63px, 6.9vw, 90px);

$c_89: clamp(63px, 6.8vw, 89px);
$c_88: clamp(62px, 6.8vw, 88px);
$c_87: clamp(61px, 6.7vw, 87px);
$c_86: clamp(61px, 6.7vw, 86px);
$c_85: clamp(60px, 6.6vw, 85px);
$c_84: clamp(59px, 6.5vw, 84px);
$c_83: clamp(58px, 6.4vw, 83px);
$c_82: clamp(57px, 6.3vw, 82px);
$c_81: clamp(57px, 6.2vw, 81px);
$c_80: clamp(56px, 6.2vw, 80px);

$c_79: clamp(55px, 6vw, 79px);
$c_78: clamp(55px, 6vw, 78px);
$c_77: clamp(54px, 5.8vw, 77px);
$c_76: clamp(53px, 5.8vw, 76px);
$c_75: clamp(53px, 5.7vw, 75px);
$c_74: clamp(51px, 5.7vw, 74px);
$c_73: clamp(51px, 5.6vw, 73px);
$c_72: clamp(50px, 5.5vw, 72px);
$c_71: clamp(49px, 5.4vw, 71px);
$c_70: clamp(49px, 5.4vw, 70px);

$c_69: clamp(49px, 5.3vw, 69px);
$c_68: clamp(48px, 5.2vw, 68px);
$c_67: clamp(47px, 5.1vw, 67px);
$c_66: clamp(46px, 5.1vw, 66px);
$c_65: clamp(45px, 4vw, 65px);
$c_64: clamp(44px, 4.9vw, 64px);
$c_63: clamp(44px, 4.9vw, 63px);
$c_62: clamp(43px, 4.8vw, 62px);
$c_61: clamp(43px, 4.8vw, 61px);
$c_60: clamp(42px, 4.6vw, 60px);

$c_59: clamp(42px, 4.5vw, 59px);
$c_58: clamp(41px, 4.5vw, 58px);
$c_57: clamp(40px, 4.4vw, 57px);
$c_56: clamp(39px, 4.4vw, 56px);
$c_55: clamp(38px, 4.3vw, 55px);
$c_54: clamp(38px, 4.2vw, 54px);
$c_53: clamp(37px, 4.2vw, 53px);
$c_52: clamp(37px, 4vw, 52px);
$c_51: clamp(36px, 3.9vw, 51px);
$c_50: clamp(35px, 3.8vw, 50px);

$c_49: clamp(34px, 3.8vw, 49px);
$c_48: clamp(34px, 3.7vw, 48px);
$c_47: clamp(33px, 3.6vw, 47px);
$c_46: clamp(32px, 3.5vw, 46px);
$c_45: clamp(32px, 3.4vw, 45px);
$c_44: clamp(31px, 3.4vw, 44px);
$c_43: clamp(30px, 3.3vw, 43px);
$c_42: clamp(30px, 3.2vw, 42px);
$c_41: clamp(29px, 3.2vw, 41px);
$c_40: clamp(28px, 3.1vw, 40px);

$c_39: clamp(27px, 3vw, 39px);
$c_38: clamp(27px, 2.9vw, 38px);
$c_37: clamp(26px, 2.8vw, 37px);
$c_36: clamp(25px, 2.8vw, 36px);
$c_35: clamp(25px, 2.7vw, 35px);
$c_34: clamp(24px, 2.6vw, 34px);
$c_33: clamp(23px, 2.5vw, 33px);
$c_32: clamp(22px, 2.4vw, 32px);
$c_31: clamp(22px, 2.4vw, 31px);
$c_30: clamp(21px, 2.3vw, 30px);

$c_29: clamp(21px, 2.2vw, 29px);
$c_28: clamp(20px, 2.2vw, 28px);
$c_27: clamp(19px, 2.1vw, 27px);
$c_26: clamp(18px, 2vw, 26px);
$c_25: clamp(18px, 1.9vw, 25px);
$c_24: clamp(17px, 1.8vw, 24px);
$c_23: clamp(16px, 1.8vw, 23px);
$c_22: clamp(15px, 1.7vw, 22px);
$c_21: clamp(15px, 1.6vw, 21px);
$c_20: clamp(14px, 1.5vw, 20px);

$c_16: clamp(14px, 1.2vw, 16px);

$f_48: clamp(38px, 4vw, 48px);
$f_40: clamp(32px, 4vw, 40px);
$f_32: clamp(24px, 3vw, 32px);
$f_30: clamp(24px, 3vw, 30px);
$f_28: clamp(22px, 3vw, 28px);
$f_24: clamp(19px, 2.4vw, 24px);
$f_22: clamp(18px, 2.2vw, 22px);
$f_20: clamp(16px, 2vw, 20px);
$f_18: clamp(15px, 1.8vw, 18px);
$f_16: clamp(14px, 1.6vw, 16px);
$f_14: clamp(12px, 1.4vw, 14px);
